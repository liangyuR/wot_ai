# 坦克世界模仿学习训练配置

# 图像处理配置
image:
  target_width: 256
  target_height: 256

# 动作配置
action:
  # 移动按键
  movement_keys: ["w", "a", "s", "d"]
  # 鼠标按键
  mouse_keys: ["mouse_left", "mouse_right"]
  # 特殊按键：刹车、瞄准镜、交互
  special_keys: ["space", "shift", "t"]
  # 动作维度（自动计算：4移动 + 2鼠标按键 + 2鼠标位移 + 3特殊按键 = 11）
  action_dim: 11

# 时序模型配置
model:
  # Backbone类型 (resnet18, efficientnet_v2_s, convnext_tiny等)
  backbone: resnet18
  # 连续帧序列长度
  sequence_length: 4
  # 是否使用ImageNet预训练权重
  use_pretrained: true
  # 是否冻结backbone（可先冻结训练再微调）
  freeze_backbone: false
  # 时序模型类型 (lstm, transformer, multihead_attention)
  temporal_model: lstm
  # LSTM参数
  lstm_hidden_size: 256
  lstm_num_layers: 2
  # Transformer参数
  transformer_dim: 256
  transformer_heads: 8
  transformer_layers: 2
  # 是否使用Flash Attention（需要安装flash-attn）
  use_flash_attention: false
  # 是否使用torch.compile优化（PyTorch 2.0+）
  torch_compile: false

# 训练配置
training:
  # 优化器类型 (adam, adamw, lion, adan)
  optimizer: adamw
  # 批次大小（序列输入建议较小）
  batch_size: 32
  # 学习率
  learning_rate: 0.0001
  # 权重衰减
  weight_decay: 0.00001
  # 训练轮数
  epochs: 20
  # 数据加载器工作线程数
  num_workers: 12
  # 验证集比例
  val_split: 0.2
  # 梯度累积步数（模拟更大batch size）
  gradient_accumulation_steps: 1
  # 学习率调度器类型 (reduce_on_plateau, cosine_warmup, onecycle)
  scheduler: cosine_warmup
  # Warmup轮数
  warmup_epochs: 2
  # 是否使用混合精度训练
  use_mixed_precision: true

# 数据路径配置
paths:
  # 数据根目录（如果为空，将从环境变量 TRAIN_DATA_ROOT 读取）
  data_root: "C:/data/recordings"
  # 模型保存路径（相对于脚本目录）
  model_save_path: "tank_imitation_model.pth"

# 分辨率配置
# 注意：实际分辨率将从数据的 meta.json 中读取
# 以下值为默认值，如果 meta.json 不存在则使用
resolution:
  default_width: 3840
  default_height: 2160

# 数据加载优化配置
data:
  # 是否使用OpenCV加载图像（比PIL快）
  use_opencv: true
  # 是否启用图像缓存
  enable_cache: true
  # LRU缓存大小
  cache_size: 1000
  # DataLoader预取因子
  prefetch_factor: 2

